{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dataFactoryName": {
            "type": "string",
            "defaultValue": "demoCustomerADF",
            "metadata": {
                "description": "The name you provide will be appended with a unique sting to make it globally available. The name can contain only letters, numbers and hyphens. The first and last characters must be a letter or number. Spaces are not allowed."
            }
        },
        "dataFactoryLocation": {
            "defaultValue": "East US",
            "type": "string",
            "metadata": {
            }
        },
        "storageAccountName": {
            "defaultValue": "demoenvsa",
            "type": "string",
            "metadata": {
                "description": "The name you provide will be appended with a unique sting to make it globally available. The field can contain only lowercase letters and numbers. Name must be between 1 and 11 characters."
            }
        },
        "publicStorageAccountName": {
            "type": "string",
            "defaultValue": "covidtrackingdefinitive"
        },
        "sasURI": {
            "type": "string"
        },
        "containerName1": {
            "defaultValue": "public",
            "type": "string"
        },
        "containerName2": {
            "defaultValue": "staging",
            "type": "string"
        },
        "sqlServerName": {
            "type": "string",
            "defaultValue": "democustomerdbserver",
            "metadata": {
                "description": "The name you provide will be appended with a unique sting to make it globally available. Your server name can contain only lowercase letters, numbers, and '-', but can't start or end with '-' or have more than 49 characters."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "defaultValue": "emumba",
            "metadata": {
                "description": "Your login name must not contain a SQL Identifier or a typical system name (like admin, administrator, sa, root, dbmanager, loginmanager, etc.) or a built-in database user or role (like dbo, guest, public, etc.)"
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "defaultValue": "DemoCustomer2020!@#$",
            "metadata": {
                "description": "Your password must be at least 8 characters in length. Your password must contain characters from three of the following categories â€“ English uppercase letters, English lowercase letters, numbers (0-9), and non-alphanumeric characters (!, $, #, %, etc.) Your password cannot contain all or part of the login name. Part of a login name is defined as three or more consecutive alphanumeric characters."
                
            }
        },
        "allowAzureIPs": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Allow Azure services to access server."
            }
        },
        "sqlConnectionType": {
            "defaultValue": "Default",
            "allowedValues": [
                "Default",
                "Redirect",
                "Proxy"
            ],
            "type": "string",
            "metadata": {
                "description": "SQL logical server connection type."
            }
        },
        "sqlDBName": {
            "type": "string",
            "defaultValue": "democustomersqldb",
            "metadata": {
                "description": "Value should not match special patterns. It should contain a length of maximum of 128."
            }
        },
        "dataWarehouseName": {
            "type": "string",
            "defaultValue": "democustomerdw",
            "metadata": {
                "description": "Value should not match special patterns. It should contain a length of maximum of 128."
            }
        },
        "transparentDataEncryption": {
            "defaultValue": "Enabled",
            "type": "string",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Enable/Disable Transparent Data Encryption"
            }
        },
        "serviceLevelObjective": {
            "defaultValue": "DW100c",
            "type": "string",
            "metadata": {
                "description": "Data warehouse tier."
            }
        },
        "createSqlDb": {
            "type": "string",
            "allowedValues": [
              "Yes",
              "No"
            ],
            "metadata": {
                "description": "Specify if you want to write data into SQL database."
            }
          }
    },
    "variables": {
        "databaseCollation": "SQL_Latin1_General_CP1_CI_AS",
        "storageAccountUniqueName": "[toLower(concat(parameters('storageAccountName'), uniqueString(resourceGroup().id)))]",
        "sqlServerUniqueName": "[concat(parameters('sqlServerName'), uniqueString(resourceGroup().id))]",
        "dataFactoryUniqueName": "[concat(parameters('dataFactoryName'), uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountUniqueName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountUniqueName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountUniqueName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountUniqueName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountUniqueName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountUniqueName'), '/default/',parameters('containerName1'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountUniqueName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountUniqueName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageAccountUniqueName'), '/default/',parameters('containerName2'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountUniqueName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountUniqueName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2015-05-01-preview",
            "name": "[variables('sqlServerUniqueName')]",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {   "condition": "[equals(parameters('createSqlDb'),'Yes')]",
                    "type": "databases",
                    "apiVersion": "2019-06-01-preview",
                    "name": "[parameters('sqlDBName')]",
                    "sku": {
                        "name": "Basic",
                        "tier": "Basic",
                        "capacity": 5
                    },
                    "location": "[parameters('location')]",
                    "properties": {
                        "collation": "[variables('databaseCollation')]"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', concat(variables('sqlServerUniqueName')))]"
                    ]
                },
                {
                    "condition": "[parameters('allowAzureIPs')]",
                    "type": "firewallRules",
                    "apiVersion": "2018-06-01-preview",
                    "name": "AllowAllWindowsAzureIps",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', variables('sqlServerUniqueName'))]"
                    ],
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                },
                {
                    "type": "databases",
                    "kind": "v12.0,user,datawarehouse",
                    "name": "[parameters('dataWarehouseName')]",
                    "apiVersion": "2015-05-01-preview",
                    "location": "[parameters('location')]",
                    "properties": {
                        "edition": "DataWarehouse",
                        "status": "Online",
                        "requestedServiceObjectiveName": "[parameters('serviceLevelObjective')]",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "readScale": "Disabled",
                        "zoneRedundant": false,
                        "isUpgradeRequested": false
                    },
                    "dependsOn": [
                        "[variables('sqlServerUniqueName')]"
                    ],
                    "resources": [
                        {
                            "comments": "Transparent Data Encryption",
                            "name": "current",
                            "type": "transparentDataEncryption",
                            "apiVersion": "2017-03-01-preview",
                            "properties": {
                                "status": "[parameters('transparentDataEncryption')]"
                            },
                            "dependsOn": [
                                "[parameters('dataWarehouseName')]"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "name": "[variables('dataFactoryUniqueName')]",
            "location": "[parameters('dataFactoryLocation')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "type": "Microsoft.DataFactory/factories/linkedServices",
                    "apiVersion": "2018-06-01",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/publicStorageLinkedService')]",
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]"
                    ],
                    "properties": {
                        "annotations": [],
                        "type": "AzureBlobStorage",
                        "typeProperties": {
                            "sasUri": {
                                "type": "SecureString",
                                "value": "[parameters('sasURI')]"
                            }
                        }
                    }
                },
                {
                    "type": "Microsoft.DataFactory/factories/linkedServices",
                    "apiVersion": "2018-06-01",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/customerStorageLinkedService')]",
                    "dependsOn": [
						"[variables('dataFactoryUniqueName')]",
						"[variables('storageAccountUniqueName')]"
					],
					"properties": {
						"type": "AzureBlobStorage",
						"typeProperties": {
							"connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountUniqueName'),';AccountKey=',listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountUniqueName')), '2019-06-01').keys[0].value)]"
						}
					}
				},
                {
                    "name": "[concat(variables('dataFactoryUniqueName'), '/AzureSynapseAnalyticsStaging')]",
                    "type": "Microsoft.DataFactory/factories/linkedServices",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "annotations": [],
                        "type": "AzureSqlDW",
                        "typeProperties": {
                            "connectionString": "[concat('integrated security=False;encrypt=True;connection timeout=30;data source=',variables('sqlServerUniqueName'),'.database.windows.net;initial catalog=',parameters('dataWarehouseName'),';user id=',parameters('sqlAdministratorLogin'),';Password=',parameters('sqlAdministratorLoginPassword'))]"
                        }
                    },
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]"
                    ]
                },
                {
                    "name": "[concat(variables('dataFactoryUniqueName'), '/AzureSynapseOperational')]",
                    "type": "Microsoft.DataFactory/factories/linkedServices",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "annotations": [],
                        "type": "AzureSqlDW",
                        "typeProperties": {
                            "connectionString": "[concat('integrated security=False;encrypt=True;connection timeout=30;data source=',variables('sqlServerUniqueName'),'.database.windows.net;initial catalog=',parameters('dataWarehouseName'),';user id=',parameters('sqlAdministratorLogin'), ';Password=', parameters('sqlAdministratorLoginPassword'))]"
                        }
                    },
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]"
                    ]
                },
                {
                    "condition": "[equals(parameters('createSqlDb'),'Yes')]",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/AzureSqlDatabase')]",
                    "type": "Microsoft.DataFactory/factories/linkedServices",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "annotations": [],
                        "type": "AzureSqlDatabase",
                        "typeProperties": {
                            "connectionString": "[concat('data source=',variables('sqlServerUniqueName'),'.database.windows.net;integrated security=False;Server=tcp:',variables('sqlServerUniqueName'),'.database.windows.net,1433;Initial Catalog=',parameters('sqlDBName'),';Persist Security Info=False;User ID=',parameters('sqlAdministratorLogin'),';Password=',parameters('sqlAdministratorLoginPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
                        }
                    },
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]"
                    ]
                },
                {
                    "type": "Microsoft.DataFactory/factories/datasets",
                    "apiVersion": "2018-06-01",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/ArmtemplateTestDatasetIn')]",
                   
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/publicStorageLinkedService')]"
                    ],
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC/Sources"
                        },
                        "linkedServiceName": {
                            "referenceName": "publicStorageLinkedService",
                            "type": "LinkedServiceReference"
                        },
                        "annotations": [],
                        "type": "DelimitedText",
                        "typeProperties": {
                            "location": {
                                "type": "AzureBlobStorageLocation",
                                "fileName": "covid_tracking.csv",
                                "folderPath": "curated/covid-19/covid_tracking/latest",
                                "container": "public"
                            },
                            "columnDelimiter": ",",
                            "escapeChar": "\\",
                            "firstRowAsHeader": true,
                            "quoteChar": "\""
                        },
                        "schema": []
                    }
                },
                {
                    "type": "Microsoft.DataFactory/factories/datasets",
                    "apiVersion": "2018-06-01",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/ArmtemplateTestDatasetOut')]",
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/customerStorageLinkedService')]"
                    ],
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC/Common"
                        },
                        "linkedServiceName": {
                            "referenceName": "customerStorageLinkedService",
                            "type": "LinkedServiceReference"
                        },
                        "annotations": [],
                        "type": "DelimitedText",
                        "typeProperties": {
                            "location": {
                                "type": "AzureBlobStorageLocation",
                                "folderPath": "output",
                                "container": "staging"
                            },
                            "columnDelimiter": ",",
                            "escapeChar": "\\",
                            "firstRowAsHeader": true,
                            "quoteChar": "\""
                        },
                        "schema": []
                    }
                },
                {
                    "name": "[concat(variables('dataFactoryUniqueName'), '/AzureSynapseAnalyticsStagingTable')]",
                    "type": "Microsoft.DataFactory/factories/datasets",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC/Common"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSynapseAnalyticsStaging",
                            "type": "LinkedServiceReference"
                        },
                        "annotations": [],
                        "type": "AzureSqlDWTable",
                        "schema": [],
                        "typeProperties": {
                            "schema": "",
                            "table": "stagingdhc"
                        }
                    },
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/AzureSynapseAnalyticsStaging')]"
                    ]
                },
                {
                    "name": "[concat(variables('dataFactoryUniqueName'), '/SynapseOperationalTable_sink')]",
                    "type": "Microsoft.DataFactory/factories/datasets",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC/Sinks"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSynapseOperational",
                            "type": "LinkedServiceReference"
                        },
                        "annotations": [],
                        "type": "AzureSqlDWTable",
                        "schema": [],
                        "typeProperties": {
                            "schema": "",
                            "table": "operationaldhc"
                        }
                    },
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/AzureSynapseOperational')]"
                    ]
                },
                {
                    "condition": "[equals(parameters('createSqlDb'),'Yes')]",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/SqlDbStaging')]",
                    "type": "Microsoft.DataFactory/factories/datasets",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC/Common"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase",
                            "type": "LinkedServiceReference"
                        },
                        "annotations": [],
                        "type": "AzureSqlTable",
                        "schema": [],
                        "typeProperties": {
                            "schema": "",
                            "table": "stagingdhc"
                        }
                    },
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/AzureSqlDatabase')]"
                    ]
                },
                {
                    "condition": "[equals(parameters('createSqlDb'),'Yes')]",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/SqlOperationalSink')]",
                    "type": "Microsoft.DataFactory/factories/datasets",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC/Sinks"
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase",
                            "type": "LinkedServiceReference"
                        },
                        "annotations": [],
                        "type": "AzureSqlTable",
                        "schema": [],
                        "typeProperties": {
                            "schema": "",
                            "table": "operationaldhc"
                        }
                    },
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/AzureSqlDatabase')]"
                    ]
                },
                {
                    "name": "[concat(variables('dataFactoryUniqueName'), '/LoadIntoStagingTable')]",
                    "type": "Microsoft.DataFactory/factories/dataflows",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC"
                        },
                        "type": "MappingDataFlow",
                        "typeProperties": {
                            "sources": [
                                {
                                    "dataset": {
                                        "referenceName": "ArmtemplateTestDatasetOut",
                                        "type": "DatasetReference"
                                    },
                                    "name": "SourceCSV"
                                }
                            ],
                            "sinks": [
                                {
                                    "dataset": {
                                        "referenceName": "AzureSynapseAnalyticsStagingTable",
                                        "type": "DatasetReference"
                                    },
                                    "name": "SynapseStagingSink"
                                }
                            ],
                            "transformations": [],
                            "script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'filename',\n\tinferDriftedColumnTypes: true) ~> SourceCSV\nSourceCSV sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SynapseStagingSink"
                        }
                    },
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/ArmtemplateTestDatasetOut')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/AzureSynapseAnalyticsStagingTable')]"
                    ]
                },
                {
                    "name": "[concat(variables('dataFactoryUniqueName'), '/LoadIntoOperationalTable')]",
                    "type": "Microsoft.DataFactory/factories/dataflows",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC"
                        },
                        "type": "MappingDataFlow",
                        "typeProperties": {
                            "sources": [
                                {
                                    "dataset": {
                                        "referenceName": "AzureSynapseAnalyticsStagingTable",
                                        "type": "DatasetReference"
                                    },
                                    "name": "sourceSynapseStagingTable"
                                }
                            ],
                            "sinks": [
                                {
                                    "dataset": {
                                        "referenceName": "SynapseOperationalTable_sink",
                                        "type": "DatasetReference"
                                    },
                                    "name": "SynapseOperationalTable"
                                }
                            ],
                            "transformations": [],
                            "script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> sourceSynapseStagingTable\nsourceSynapseStagingTable sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tpostSQLs:['\\n'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SynapseOperationalTable"
                        }
                    },
                    "dependsOn": [
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/AzureSynapseAnalyticsStagingTable')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/SynapseOperationalTable_sink')]"
                    ]
                },
                {
                    "condition": "[equals(parameters('createSqlDb'),'Yes')]",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/LoadIntoStagingTable_withSQL')]",
                    "type": "Microsoft.DataFactory/factories/dataflows",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC"
                        },
                        "type": "MappingDataFlow",
                        "typeProperties": {
                            "sources": [
                                {
                                    "dataset": {
                                        "referenceName": "ArmtemplateTestDatasetOut",
                                        "type": "DatasetReference"
                                    },
                                    "name": "SourceCSV"
                                }
                            ],
                            "sinks": [
                                {
                                    "dataset": {
                                        "referenceName": "AzureSynapseAnalyticsStagingTable",
                                        "type": "DatasetReference"
                                    },
                                    "name": "SynapseStagingSink"
                                },
                                {
                                    "dataset": {
                                        "referenceName": "SqlDbStaging",
                                        "type": "DatasetReference"
                                    },
                                    "name": "SQLStagingSink"
                                }
                            ],
                            "transformations": [],
                            "script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'filename',\n\tinferDriftedColumnTypes: true) ~> SourceCSV\nSourceCSV sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SynapseStagingSink\nSourceCSV sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SQLStagingSink"
                        }
                    },
                    "dependsOn": [
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/ArmtemplateTestDatasetOut')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/AzureSynapseAnalyticsStagingTable')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/SqlDbStaging')]",
                        "[variables('dataFactoryUniqueName')]"
                    ]
                },
                {
                    "condition": "[equals(parameters('createSqlDb'),'Yes')]",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/LoadIntoOperationalTable_withSQL')]",
                    "type": "Microsoft.DataFactory/factories/dataflows",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC"
                        },
                        "type": "MappingDataFlow",
                        "typeProperties": {
                            "sources": [
                                {
                                    "dataset": {
                                        "referenceName": "AzureSynapseAnalyticsStagingTable",
                                        "type": "DatasetReference"
                                    },
                                    "name": "sourceSynapseStagingTable"
                                },
                                {
                                    "dataset": {
                                        "referenceName": "SqlDbStaging",
                                        "type": "DatasetReference"
                                    },
                                    "name": "sourceSqlDbStaging"
                                }
                            ],
                            "sinks": [
                                {
                                    "dataset": {
                                        "referenceName": "SynapseOperationalTable_sink",
                                        "type": "DatasetReference"
                                    },
                                    "name": "SynapseOperationalTable"
                                },
                                {
                                    "dataset": {
                                        "referenceName": "SqlOperationalSink",
                                        "type": "DatasetReference"
                                    },
                                    "name": "SqlOperationalSink"
                                }
                            ],
                            "transformations": [],
                            "script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> sourceSynapseStagingTable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSqlDbStaging\nsourceSynapseStagingTable sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tpostSQLs:['\\n'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SynapseOperationalTable\nsourceSqlDbStaging sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SqlOperationalSink"
                        }
                    },
                    "dependsOn": [
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/ArmtemplateTestDatasetOut')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/AzureSynapseAnalyticsStagingTable')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/SqlDbStaging')]",
                        "[variables('dataFactoryUniqueName')]"
                    ]
                },
                {
                    "type": "Microsoft.DataFactory/factories/pipelines",
                    "apiVersion": "2018-06-01",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/definitiveHCLoadToSynapse')]",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC"
                        },
                        "activities": [
                            {
                                "name": "Copy latest data",
                                "type": "Copy",
                                "dependsOn": [],
                                "policy": {
                                    "timeout": "7.00:00:00",
                                    "retry": 3,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                },
                                "userProperties": [],
                                "typeProperties": {
                                    "source": {
                                        "type": "DelimitedTextSource",
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    },
                                    "sink": {
                                        "type": "DelimitedTextSink",
                                        "storeSettings": {
                                            "type": "AzureBlobStorageWriteSettings"
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextWriteSettings",
                                            "quoteAllText": true,
                                            "fileExtension": ".txt"
                                        }
                                    },
                                    "enableStaging": false,
                                    "translator": {
                                        "type": "TabularTranslator",
                                        "typeConversion": true,
                                        "typeConversionSettings": {
                                            "allowDataTruncation": true,
                                            "treatBooleanAsNumber": false
                                        }
                                    }
                                },
                                "inputs": [
                                    {
                                        "referenceName": "ArmtemplateTestDatasetIn",
                                        "type": "DatasetReference"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "referenceName": "ArmtemplateTestDatasetOut",
                                        "type": "DatasetReference"
                                    }
                                ]
                            },
                            {
                                "name": "Verify Master Key",
                                "type": "Lookup",
                                "dependsOn": [
                                    {
                                        "activity": "Copy latest data",
                                        "dependencyConditions": [
                                            "Succeeded"
                                        ]
                                    }
                                ],
                                "policy": {
                                    "timeout": "7.00:00:00",
                                    "retry": 3,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                },
                                "userProperties": [],
                                "typeProperties": {
                                    "source": {
                                        "type": "SqlDWSource",
                                        "sqlReaderQuery": "IF (select Count(*) from sys.symmetric_keys where name like '%DatabaseMasterKey%') = 0\n\nBEGIN\n\nCREATE master key ;\nselect Count(*) from sys.symmetric_keys;\n\nEND\n\nELSE \n\nBEGIN\n\nselect Count(*) from sys.symmetric_keys;\n\nEND\nBEGIN\n\nCREATE master key ;\nselect Count(*) from sys.symmetric_keys;\nEND\n",
                                        "queryTimeout": "02:00:00"
                                    },
                                    "dataset": {
                                        "referenceName": "AzureSynapseAnalyticsStagingTable",
                                        "type": "DatasetReference"
                                    }
                                }
                            },
                            {
                                "name": "LoadIntoStagingTable",
                                "type": "ExecuteDataFlow",
                                "dependsOn": [
                                    {
                                        "activity": "Verify Master Key",
                                        "dependencyConditions": [
                                            "Succeeded"
                                        ]
                                    },
                                    "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/customerStorageLinkedService')]"
                                ],
                                "policy": {
                                    "timeout": "7.00:00:00",
                                    "retry": 3,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                },
                                "userProperties": [],
                                "typeProperties": {
                                    "dataflow": {
                                        "referenceName": "LoadIntoStagingTable",
                                        "type": "DataFlowReference",
                                        "parameters": {},
                                        "datasetParameters": {
                                            "SourceCSV": {},
                                            "SynapseStagingSink": {}
                                        }
                                    },
                                    "staging": {
                                        "linkedService": {
                                            "referenceName": "customerStorageLinkedService",
                                            "type": "LinkedServiceReference"
                                        },
                                        "folderPath": "staging"
                                    },
                                    "compute": {
                                        "coreCount": 8,
                                        "computeType": "General"
                                    }
                                }
                            },
                            {
                                "name": "LoadIntoOperationalTable",
                                "type": "ExecuteDataFlow",
                                "dependsOn": [
                                    {
                                        "activity": "LoadIntoStagingTable",
                                        "dependencyConditions": [
                                            "Succeeded"
                                        ]
                                    }, 
                                    "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/customerStorageLinkedService')]"
                                ],
                                "policy": {
                                    "timeout": "7.00:00:00",
                                    "retry": 3,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                },
                                "userProperties": [],
                                "typeProperties": {
                                    "dataflow": {
                                        "referenceName": "LoadIntoOperationalTable",
                                        "type": "DataFlowReference",
                                        "parameters": {},
                                        "datasetParameters": {
                                            "sourceSynapseStagingTable": {},
                                            "SynapseOperationalTable": {}
                                        }
                                    },
                                    "staging": {
                                        "linkedService": {
                                            "referenceName": "customerStorageLinkedService",
                                            "type": "LinkedServiceReference"
                                        },
                                        "folderPath": "staging"
                                    },
                                    "compute": {
                                        "coreCount": 8,
                                        "computeType": "General"
                                    }
                                }
                            }
                        ],
                        "annotations": []
                    },
                    "dependsOn": [
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/dataflows/LoadIntoStagingTable')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/dataflows/LoadIntoOperationalTable')]",
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/ArmtemplateTestDatasetIn')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/ArmtemplateTestDatasetOut')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/AzureSynapseAnalyticsStagingTable')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/SynapseOperationalTable_sink')]"
                    ]
                },
                {
                    "condition": "[equals(parameters('createSqlDb'),'Yes')]",
                    "name": "[concat(variables('dataFactoryUniqueName'), '/definitiveHCLoadToSynapseAndSQL')]",
                    "type": "Microsoft.DataFactory/factories/pipelines",
                    "apiVersion": "2018-06-01",
                    "properties": {
                        "folder": {
                            "name": "CovidDefinitiveHC"
                        },
                        "activities": [
                            {
                                "name": "Copy latest data",
                                "type": "Copy",
                                "dependsOn": [],
                                "policy": {
                                    "timeout": "7.00:00:00",
                                    "retry": 3,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                },
                                "userProperties": [],
                                "typeProperties": {
                                    "source": {
                                        "type": "DelimitedTextSource",
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextReadSettings"
                                        }
                                    },
                                    "sink": {
                                        "type": "DelimitedTextSink",
                                        "storeSettings": {
                                            "type": "AzureBlobStorageWriteSettings"
                                        },
                                        "formatSettings": {
                                            "type": "DelimitedTextWriteSettings",
                                            "quoteAllText": true,
                                            "fileExtension": ".txt"
                                        }
                                    },
                                    "enableStaging": false,
                                    "translator": {
                                        "type": "TabularTranslator",
                                        "typeConversion": true,
                                        "typeConversionSettings": {
                                            "allowDataTruncation": true,
                                            "treatBooleanAsNumber": false
                                        }
                                    }
                                },
                                "inputs": [
                                    {
                                        "referenceName": "ArmtemplateTestDatasetIn",
                                        "type": "DatasetReference",
                                        "parameters": {}
                                    }
                                ],
                                "outputs": [
                                    {
                                        "referenceName": "ArmtemplateTestDatasetOut",
                                        "type": "DatasetReference",
                                        "parameters": {}
                                    }
                                ]
                            },
                            {
                                "name": "Verify Master Key",
                                "type": "Lookup",
                                "dependsOn": [
                                    {
                                        "activity": "Copy latest data",
                                        "dependencyConditions": [
                                            "Succeeded"
                                        ]
                                    }
                                ],
                                "policy": {
                                    "timeout": "7.00:00:00",
                                    "retry": 3,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                },
                                "userProperties": [],
                                "typeProperties": {
                                    "source": {
                                        "type": "SqlDWSource",
                                        "sqlReaderQuery": "IF (select Count(*) from sys.symmetric_keys where name like '%DatabaseMasterKey%') = 0\n\nBEGIN\n\nCREATE master key ;\nselect Count(*) from sys.symmetric_keys;\n\nEND\n\nELSE \n\nBEGIN\n\nselect Count(*) from sys.symmetric_keys;\n\nEND\nBEGIN\n\nCREATE master key ;\nselect Count(*) from sys.symmetric_keys;\nEND\n",
                                        "queryTimeout": "02:00:00"
                                    },
                                    "dataset": {
                                        "referenceName": "AzureSynapseAnalyticsStagingTable",
                                        "type": "DatasetReference"
                                    }
                                }
                            },
                            {
                                "name": "LoadIntoStagingTable_withSQL",
                                "type": "ExecuteDataFlow",
                                "dependsOn": [
                                    {
                                        "activity": "Verify Master Key",
                                        "dependencyConditions": [
                                            "Succeeded"
                                        ]
                                    },
                                    "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/customerStorageLinkedService')]"
                                ],
                                "policy": {
                                    "timeout": "7.00:00:00",
                                    "retry": 3,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                },
                                "userProperties": [],
                                "typeProperties": {
                                    "dataflow": {
                                        "referenceName": "LoadIntoStagingTable_withSQL",
                                        "type": "DataFlowReference",
                                        "parameters": {},
                                        "datasetParameters": {
                                            "SourceCSV": {},
                                            "SynapseStagingSink": {},
                                            "SQLStagingSink": {}
                                        }
                                    },
                                    "staging": {
                                        "linkedService": {
                                            "referenceName": "customerStorageLinkedService",
                                            "type": "LinkedServiceReference"
                                        },
                                        "folderPath": "staging"
                                    },
                                    "compute": {
                                        "coreCount": 8,
                                        "computeType": "General"
                                    }
                                }
                            },
                            {
                                "name": "LoadIntoOperationalTable_withSQL",
                                "type": "ExecuteDataFlow",
                                "dependsOn": [
                                    {
                                        "activity": "LoadIntoStagingTable_withSQL",
                                        "dependencyConditions": [
                                            "Succeeded"
                                        ]
                                    },
                                    "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/customerStorageLinkedService')]"
                                ],
                                "policy": {
                                    "timeout": "7.00:00:00",
                                    "retry": 3,
                                    "retryIntervalInSeconds": 30,
                                    "secureOutput": false,
                                    "secureInput": false
                                },
                                "userProperties": [],
                                "typeProperties": {
                                    "dataflow": {
                                        "referenceName": "LoadIntoOperationalTable_withSQL",
                                        "type": "DataFlowReference",
                                        "parameters": {},
                                        "datasetParameters": {
                                            "sourceSynapseStagingTable": {},
                                            "sourceSqlDbStaging": {},
                                            "SynapseOperationalTable": {},
                                            "SqlOperationalSink": {}
                                        }
                                    },
                                    "staging": {
                                        "linkedService": {
                                            "referenceName": "customerStorageLinkedService",
                                            "type": "LinkedServiceReference"
                                        },
                                        "folderPath": "staging"
                                    },
                                    "compute": {
                                        "coreCount": 8,
                                        "computeType": "General"
                                    }
                                }
                            }
                        ],
                        "annotations": []
                    },
                    "dependsOn": [
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/ArmtemplateTestDatasetIn')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/datasets/ArmtemplateTestDatasetOut')]",
                        "[variables('dataFactoryUniqueName')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/dataflows/LoadIntoStagingTable_withSQL')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/linkedServices/customerStorageLinkedService')]",
                        "[concat(concat('Microsoft.DataFactory/factories/', variables('dataFactoryUniqueName')), '/dataflows/LoadIntoOperationalTable_withSQL')]"
                    ]
                }
            ]
        }
    ],
    "outputs": {}
}